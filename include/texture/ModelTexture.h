////////////////////////////////////////////////////////////////////////////////
/// @file ModelTexture.h
/// @brief Deklaracija klase ModelTexture.
/// @author Dusan Pantelic
/// @date Januar 2017
////////////////////////////////////////////////////////////////////////////////
#ifndef _MODEL_TEXTURE_H_
#define _MODEL_TEXTURE_H_

////////////////////////////////////////////////////////////////////////////////
/// @brief Prostor imena texture.
/// Sadrzi sve klase, funkcije i promenljive koje opisuju teksturu objekta.
////////////////////////////////////////////////////////////////////////////////
namespace texture {

  //////////////////////////////////////////////////////////////////////////////
  /// @brief Klasa TexturedModel opisuje teksturu objekta.
  /// Model je opisan instancom klase RawModel i odgovarajucom teksturom objekta
  /// pomocu instance klase ModelTexture.
  //////////////////////////////////////////////////////////////////////////////
  class ModelTexture {

  // Privatne promenljive klase
  private:

    /// Identifikator teksture.
    int textureID;

    /// Intenzitet sjaja
    float shine;

    /// Intenzitet reflektovanja svetlosti
    float reflectivity;

    /// Providnost
    bool hasTransparency;

    /// Koriscenje laznog osvetljenja
    bool useFakeLightning;

  // Javne funkcije klase
  public:

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Konstruktor klase.
    /// U konstruktoru se dodeljuje identifikator teksture ucitana iz png fajla.
    /// @param id Identifikator teksture.
    ////////////////////////////////////////////////////////////////////////////
    ModelTexture(int id);

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Destruktor klase.
    /// @param void
    ////////////////////////////////////////////////////////////////////////////
    ~ModelTexture();

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija vraca identifikator teksture.
    /// @param void
    /// @return int Identifikator teksture.
    ////////////////////////////////////////////////////////////////////////////
    int getID();

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija vraca intenzitet sjaja.
    /// @param void
    /// @return float Intenzitet sjaja.
    ///////////////////////////////////////////////////////////////////////////
    float getShine();

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija vraca intenzitet reflektovanja.
    /// @param void
    /// @return float Intenzitet reflektovanja.
    ///////////////////////////////////////////////////////////////////////////
    float getReflectivity();

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija vraca prozirnost.
    /// @param void
    /// @return bool Prozirnost.
    ///////////////////////////////////////////////////////////////////////////
    bool getHasTransparency();

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija vraca koriscenje laznog osvetljenja.
    /// @param void
    /// @return bool Koriscenje laznog osvetljenja.
    ///////////////////////////////////////////////////////////////////////////
    bool getUseFakeLightning();

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija postavlja intenzitet sjaja.
    /// @param shine Intenzitet sjaja.
    /// @return void
    ///////////////////////////////////////////////////////////////////////////
    void setShine(float shine);

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija postavlja intenzitet reflektovanja.
    /// @param reflectivity Intenzitet reflektovanja.
    /// @return void
    ///////////////////////////////////////////////////////////////////////////
    void setReflectivity(float reflectivity);

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija postavlja prozirnost.
    /// @param transparency Prozirnost.
    /// @return void
    ///////////////////////////////////////////////////////////////////////////
    void setHasTransparency(bool transparency);

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Funkcija postavlja koriscenje laznog osvetljenja.
    /// @param lightning Koriscenje laznog osvetljenja.
    /// @return void
    ///////////////////////////////////////////////////////////////////////////
    void setUseFakeLightning(bool lightning);

  };
} // texture

#endif
